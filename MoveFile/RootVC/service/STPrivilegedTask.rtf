{\rtf1\ansi\ansicpg936\cocoartf2509
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 PingFangSC-Regular;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red197\green255\blue226;\red0\green0\blue0;
\red170\green13\blue145;\red196\green26\blue22;\red28\green0\blue207;\red14\green14\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c45600\c0;\csgenericrgb\c77157\c100000\c88764;\csgenericrgb\c0\c0\c0;
\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c5500\c5500\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww27780\viewh18060\viewkind0
\deftab915
\pard\tx915\pardeftab915\pardirnatural\partightenfactor0

\f0\fs38 \cf2 \cb3 // 
\f1 \'cf\'c2\'c3\'e6\'b5\'c4\'b7\'bd\'b7\'a8\'d0\'e8\'d2\'aa\'ca\'b9\'d3\'c3
\f0 pod 'STPrivilegedTask' 
\f1 \'c0\'b4\'b2\'d9\'d7\'f7
\f0 .
\f1 \'b5\'ab\'ca\'c7\'d0\'a7\'b9\'fb\'b2\'bb\'cc\'ab\'c0\'ed\'cf\'eb
\f0 ,
\f1 \'b7\'c5\'c6\'fa
\f0 .\
// .sh 
\f1 \'ce\'c4\'bc\'fe\'bf\'c9\'d2\'d4\'b2\'e9\'bf\'b4
\f0 STPrivilegedTask
\f1 \'b9\'d9\'cd\'f8\'c0\'fd\'d7\'d3
\f0 .
\f2\fs24 \cf0 \

\f0\fs38 \cf4 - (\cf5 void\cf4 )test \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4     \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 // !!!: 
\f1 \'c5\'fa\'b4\'a6\'c0\'ed\'cf\'ea\'cf\'b8\'b2\'d9\'d7\'f7
\f0 ,
\f1 \'b5\'ab\'ca\'c7\'d0\'e8\'d2\'aa\'ca\'d6\'b6\'af\'c9\'fa\'b3\'c9
\f0 sh
\f1 \'ce\'c4\'bc\'fe
\f0 .
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 // NSMutableArray *components = [[@"/bin/sh copy.sh" componentsSeparatedByString:@" "] mutableCopy];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 // NSString *launchPath = components[0];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 // [components removeObjectAtIndex:0];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 // [privilegedTask setLaunchPath:launchPath];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 // [privilegedTask setArguments:components];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         STPrivilegedTask *privilegedTask = [[STPrivilegedTask alloc] init];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         [privilegedTask setLaunchPath:\cf6 @"/bin/sh"\cf4 ];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         [privilegedTask setArguments:\cf7 @[\cf6 @"copy.sh"\cf7 ]\cf4 ];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         [privilegedTask setCurrentDirectoryPath:[[NSBundle mainBundle] resourcePath]];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 //set it off
\f2\fs24 \cf0 \

\f0\fs38 \cf4         OSStatus err = [privilegedTask launch];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf5 if\cf4  (err != errAuthorizationSuccess) \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4             \cf5 if\cf4  (err == errAuthorizationCanceled) \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4                 NSLog(\cf6 @"User cancelled"\cf4 );
\f2\fs24 \cf0 \

\f0\fs38 \cf4                 \cf5 return\cf4 ;
\f2\fs24 \cf0 \

\f0\fs38 \cf4             \}  \cf5 else\cf4  \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4                 NSLog(\cf6 @"Something went wrong: %d"\cf4 , (\cf5 int\cf4 )err);
\f2\fs24 \cf0 \

\f0\fs38 \cf4                 \cf2 // For error codes, see \cf8 http://www.opensource.apple.com/source/libsecurity_authorization/libsecurity_authorization-36329/lib/Authorization.h
\f2\fs24 \cf0 \

\f0\fs38 \cf4             \}
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \}
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         [privilegedTask waitUntilExit];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 // Success!  Now, start monitoring output file handle for data
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSFileHandle *readHandle = [privilegedTask outputFileHandle];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSData *outputData = [readHandle readDataToEndOfFile];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSString *outputString = [[NSString alloc] initWithData:outputData encoding:NSUTF8StringEncoding];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSLog(\cf6 @"outputString: %@"\cf4 , outputString);
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSString *exitStr = [NSString stringWithFormat:\cf6 @"Exit status: %d"\cf4 , privilegedTask.terminationStatus];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSLog(\cf6 @"exitStr: %@"\cf4 , exitStr);
\f2\fs24 \cf0 \

\f0\fs38 \cf4     \}
\f2\fs24 \cf0 \

\f0\fs38 \cf4     \cf5 return\cf4 ;
\f2\fs24 \cf0 \

\f0\fs38 \cf4     \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 // !!!: 
\f1 \'b5\'a5\'cc\'f5\'bc\'f2\'b5\'a5\'b2\'d9\'d7\'f7
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSString * cmd;
\f2\fs24 \cf0 \

\f0\fs38 \cf4         cmd = \cf6 @"-r -p /Users/apple/Desktop/move/1/ /Users/apple/Desktop/move/2/"\cf4 ;
\f2\fs24 \cf0 \

\f0\fs38 \cf4         [STPrivilegedTask launchedPrivilegedTaskWithLaunchPath:\cf6 @"/bin/cp"\cf4  arguments:[cmd componentsSeparatedByString:\cf6 @" "\cf4 ]];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 //cmd = @"-r -p /Users/apple/Desktop/move/3/ /Users/apple/Desktop/move/4/";
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 //[STPrivilegedTask launchedPrivilegedTaskWithLaunchPath:@"/bin/cp" arguments:[cmd componentsSeparatedByString:@" "]];
\f2\fs24 \cf0 \

\f0\fs38 \cf4     \}
\f2\fs24 \cf0 \

\f0\fs38 \cf4     \cf5 return\cf4 ;
\f2\fs24 \cf0 \

\f0\fs38 \cf4     \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 // !!!: 
\f1 \'b5\'a5\'cc\'f5\'cf\'ea\'cf\'b8\'b2\'d9\'d7\'f7
\f2\fs24 \cf0 \

\f0\fs38 \cf4         STPrivilegedTask *privilegedTask = [[STPrivilegedTask alloc] init];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 //[privilegedTask setLaunchPath:@"/usr/bin/touch"];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 //[privilegedTask setArguments:@[@"/Users/apple/Desktop/move/1/wkq.txt"]];
\f2\fs24 \cf0 \

\f0\fs38 \cf4          
\f2\fs24 \cf0 \

\f0\fs38 \cf4         [privilegedTask setLaunchPath:\cf6 @"/bin/cp"\cf4 ];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 //[privilegedTask setArguments:@[@"/Users/apple/Desktop/move/1/wkq.txt", @"/Users/apple/Desktop/move/1/wkq1.txt"]];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 //[privilegedTask setArguments:@[@"-r", @"/Users/apple/Desktop/move/1/", @"/Users/apple/Desktop/move/2/"]];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSString * cmd = \cf6 @"-r -p /Users/apple/Desktop/move/1/ /Users/apple/Desktop/move/2/"\cf4 ;
\f2\fs24 \cf0 \

\f0\fs38 \cf4         [privilegedTask setArguments:[cmd componentsSeparatedByString:\cf6 @" "\cf4 ]];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 // Launch it, user is prompted for password
\f2\fs24 \cf0 \

\f0\fs38 \cf4         OSStatus err = [privilegedTask launch];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf5 if\cf4  (err != errAuthorizationSuccess) \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4             \cf5 if\cf4  (err == errAuthorizationCanceled) \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4                 NSLog(\cf6 @"User cancelled"\cf4 );
\f2\fs24 \cf0 \

\f0\fs38 \cf4             \} \cf5 else\cf4  \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4                 NSLog(\cf6 @"Something went wrong"\cf4 );
\f2\fs24 \cf0 \

\f0\fs38 \cf4             \}
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \} \cf5 else\cf4  \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4             NSLog(\cf6 @"Task successfully launched"\cf4 );
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \}
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4     \}
\f2\fs24 \cf0 \

\f0\fs38 \cf4     \cf5 return\cf4 ;
\f2\fs24 \cf0 \

\f0\fs38 \cf4     \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4         STPrivilegedTask *privilegedTask = [[STPrivilegedTask alloc] init];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSMutableArray *components = [[\cf6 @"/bin/sh script.sh"\cf4  componentsSeparatedByString:\cf6 @" "\cf4 ] mutableCopy];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSString *launchPath = components[\cf7 0\cf4 ];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         [components removeObjectAtIndex:\cf7 0\cf4 ];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         [privilegedTask setLaunchPath:launchPath];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         [privilegedTask setArguments:components];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         [privilegedTask setCurrentDirectoryPath:[[NSBundle mainBundle] resourcePath]];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 //set it off
\f2\fs24 \cf0 \

\f0\fs38 \cf4         OSStatus err = [privilegedTask launch];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf5 if\cf4  (err != errAuthorizationSuccess) \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4             \cf5 if\cf4  (err == errAuthorizationCanceled) \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4                 NSLog(\cf6 @"User cancelled"\cf4 );
\f2\fs24 \cf0 \

\f0\fs38 \cf4                 \cf5 return\cf4 ;
\f2\fs24 \cf0 \

\f0\fs38 \cf4             \}  \cf5 else\cf4  \{
\f2\fs24 \cf0 \

\f0\fs38 \cf4                 NSLog(\cf6 @"Something went wrong: %d"\cf4 , (\cf5 int\cf4 )err);
\f2\fs24 \cf0 \

\f0\fs38 \cf4                 \cf2 // For error codes, see \cf8 http://www.opensource.apple.com/source/libsecurity_authorization/libsecurity_authorization-36329/lib/Authorization.h
\f2\fs24 \cf0 \

\f0\fs38 \cf4             \}
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \}
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         [privilegedTask waitUntilExit];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         \cf2 // Success!  Now, start monitoring output file handle for data
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSFileHandle *readHandle = [privilegedTask outputFileHandle];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSData *outputData = [readHandle readDataToEndOfFile];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSString *outputString = [[NSString alloc] initWithData:outputData encoding:NSUTF8StringEncoding];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSLog(\cf6 @"outputString: %@"\cf4 , outputString);
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSString *exitStr = [NSString stringWithFormat:\cf6 @"Exit status: %d"\cf4 , privilegedTask.terminationStatus];
\f2\fs24 \cf0 \

\f0\fs38 \cf4         
\f2\fs24 \cf0 \

\f0\fs38 \cf4         NSLog(\cf6 @"exitStr: %@"\cf4 , exitStr);
\f2\fs24 \cf0 \

\f0\fs38 \cf4     \}
\f2\fs24 \cf0 \

\f0\fs38 \cf4     \cf5 return\cf4 ;
\f2\fs24 \cf0 \

\f0\fs38 \cf4 \}}